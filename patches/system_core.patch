From 62f32952232658d07e5a9d19d11ca3d7e9ae8a24 Mon Sep 17 00:00:00 2001
From: sooti <sooti85@gmail.com>
Date: Fri, 13 Nov 2015 11:18:31 +0100
Subject: [PATCH 1/3] remove annoying android_log error

Change-Id: Ie57fe969dee823893aaaffb34e9174c24df0acb3
---
 libcutils/fs_config.c | 40 ----------------------------------------
 1 file changed, 40 deletions(-)

diff --git a/libcutils/fs_config.c b/libcutils/fs_config.c
index 7b23d71..1d226a3 100644
--- a/libcutils/fs_config.c
+++ b/libcutils/fs_config.c
@@ -209,46 +209,6 @@ void fs_config(const char *path, int dir, const char *target_out_path,
     plen = strlen(path);
 
     fd = fs_config_open(dir, target_out_path);
-    if (fd >= 0) {
-        struct fs_path_config_from_file header;
-
-        while (TEMP_FAILURE_RETRY(read(fd, &header, sizeof(header))) == sizeof(header)) {
-            char *prefix;
-            uint16_t host_len = get2LE((const uint8_t *)&header.len);
-            ssize_t len, remainder = host_len - sizeof(header);
-            if (remainder <= 0) {
-                ALOGE("%s len is corrupted", dir ? conf_dir : conf_file);
-                break;
-            }
-            prefix = calloc(1, remainder);
-            if (!prefix) {
-                ALOGE("%s out of memory", dir ? conf_dir : conf_file);
-                break;
-            }
-            if (TEMP_FAILURE_RETRY(read(fd, prefix, remainder)) != remainder) {
-                free(prefix);
-                ALOGE("%s prefix is truncated", dir ? conf_dir : conf_file);
-                break;
-            }
-            len = strnlen(prefix, remainder);
-            if (len >= remainder) { /* missing a terminating null */
-                free(prefix);
-                ALOGE("%s is corrupted", dir ? conf_dir : conf_file);
-                break;
-            }
-            if (fs_config_cmp(dir, prefix, len, path, plen)) {
-                free(prefix);
-                close(fd);
-                *uid = get2LE((const uint8_t *)&(header.uid));
-                *gid = get2LE((const uint8_t *)&(header.gid));
-                *mode = (*mode & (~07777)) | get2LE((const uint8_t *)&(header.mode));
-                *capabilities = get8LE((const uint8_t *)&(header.capabilities));
-                return;
-            }
-            free(prefix);
-        }
-        close(fd);
-    }
 
     pc = dir ? android_dirs : android_files;
     for(; pc->prefix; pc++){
-- 
2.7.4


From ae37fa69c849c230a71a186eaca9cd64859170c2 Mon Sep 17 00:00:00 2001
From: Ricardo Cerqueira <cyanogenmod@cerqueira.org>
Date: Sun, 23 Sep 2012 01:14:51 +0100
Subject: [PATCH 2/3] libion: Disable for omap3

the omap3 HAL repository has its own modified libion, which is
necessary for the openmax libraries

Change-Id: Ic6f175fe456a2891d5556d937c3073215b861981

Conflicts:
	libion/Android.mk
---
 libion/Android.mk | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/libion/Android.mk b/libion/Android.mk
index 6562cd3..7f14114 100644
--- a/libion/Android.mk
+++ b/libion/Android.mk
@@ -1,3 +1,4 @@
+ifneq ($(TARGET_BOARD_PLATFORM),omap3)
 LOCAL_PATH := $(call my-dir)
 
 include $(CLEAR_VARS)
@@ -20,3 +21,4 @@ LOCAL_CFLAGS := -Werror
 include $(BUILD_EXECUTABLE)
 
 include $(call first-makefiles-under,$(LOCAL_PATH))
+endif
-- 
2.7.4


From 87c7bfc0731770e3cfa39521ad84429551efb600 Mon Sep 17 00:00:00 2001
From: sooti <sooti>
Date: Sat, 28 Nov 2015 18:06:12 +0100
Subject: [PATCH 3/3] mkbootimg: do not pack relocations for executables

Change-Id: Ie303fdca85742ae9da0facbf1e5eecbd4e6ddaa9
---
 mkbootimg/Android.mk | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/mkbootimg/Android.mk b/mkbootimg/Android.mk
index c020323..7e2ca59 100644
--- a/mkbootimg/Android.mk
+++ b/mkbootimg/Android.mk
@@ -4,7 +4,7 @@ include $(CLEAR_VARS)
 
 LOCAL_SRC_FILES := mkbootimg.c
 LOCAL_STATIC_LIBRARIES := libmincrypt
-LOCAL_CFLAGS := -Werror
+LOCAL_CFLAGS := -Werror -std=c99
 
 LOCAL_MODULE := mkbootimg
 
@@ -16,6 +16,8 @@ LOCAL_MODULE := unpackbootimg
 include $(BUILD_HOST_EXECUTABLE)
 
 include $(CLEAR_VARS)
+LOCAL_CFLAGS := -std=c99
+LOCAL_PACK_MODULE_RELOCATIONS := false
 LOCAL_SRC_FILES := mkbootimg.c
 LOCAL_STATIC_LIBRARIES := libmincrypt libcutils libc
 LOCAL_MODULE := utility_mkbootimg
@@ -28,6 +30,8 @@ LOCAL_FORCE_STATIC_EXECUTABLE := true
 include $(BUILD_EXECUTABLE)
 
 include $(CLEAR_VARS)
+LOCAL_CFLAGS := -std=c99
+LOCAL_PACK_MODULE_RELOCATIONS := false
 LOCAL_SRC_FILES := unpackbootimg.c
 LOCAL_STATIC_LIBRARIES := libcutils libc
 LOCAL_MODULE := utility_unpackbootimg
-- 
2.7.4

